package ${package}.${moduleName}.service.gen;

import cn.org.autumn.table.TableInit;
import org.apache.commons.lang.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.HashMap;
import java.util.Map;
import com.baomidou.mybatisplus.mapper.EntityWrapper;
import com.baomidou.mybatisplus.plugins.Page;
import com.baomidou.mybatisplus.service.impl.ServiceImpl;
import ${mainPath}.utils.PageUtils;
import ${mainPath}.utils.Query;

import cn.org.autumn.modules.${moduleName}.service.${upperModuleName}Menu;
import ${package}.${moduleName}.dao.${className}Dao;
import ${package}.${moduleName}.entity.${className}Entity;

import javax.annotation.PostConstruct;
import cn.org.autumn.modules.sys.entity.SysMenuEntity;
import cn.org.autumn.modules.sys.service.SysMenuService;
import cn.org.autumn.modules.lan.service.LanguageService;

/**
 * ${comment}控制器
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */

public class ${className}ServiceGen extends ServiceImpl<${className}Dao, ${className}Entity> {

    protected static final String NULL = null;

    @Autowired
    protected ${upperModuleName}Menu ${moduleName}Menu;

    @Autowired
    protected SysMenuService sysMenuService;

    @Autowired
    protected TableInit tableInit;

    @Autowired
    protected LanguageService languageService;

    public PageUtils queryPage(Map<String, Object> params) {
        Page<${className}Entity> _page = new Query<${className}Entity>(params).getPage();
        EntityWrapper<${className}Entity> entityEntityWrapper = new EntityWrapper<>();
        Map<String,Object> condition = new HashMap<>();
        #foreach ($column in $columns)
        if(params.containsKey("$column.attrname") && null !=params.get("$column.attrname") && StringUtils.isNotEmpty(params.get("$column.attrname").toString())) {
            condition.put("$column.name", params.get("$column.attrname"));
        }
        #end
        _page.setCondition(condition);
        Page<${className}Entity> page = this.selectPage(_page, entityEntityWrapper);
        page.setTotal(baseMapper.selectCount(entityEntityWrapper));
        return new PageUtils(page);
    }

    /**
    * need implement it in the subclass.
    * @return
    */
    public int menuOrder(){
        return 0;
    }

    /**
    * need implement it in the subclass.
    * @return
    */
    public int parentMenu(){
        ${moduleName}Menu.init();
        SysMenuEntity sysMenuEntity = sysMenuService.getByMenuKey(${upperModuleName}Menu.${moduleName}_menu);
        if(null != sysMenuEntity)
            return sysMenuEntity.getMenuId().intValue();
        return ${moduleId};
    }

    public String ico(){
        return "fa-file-code-o";
    }

    private String order(){
        return String.valueOf(menuOrder());
    }

    private String parent(){
        return String.valueOf(parentMenu());
    }


    @PostConstruct
    public void init() {
        if (!tableInit.init)
            return;
        Long id = 0L;
        String[] _m = new String[]
                {null, parent(), "${comment}", "modules/${moduleName}/${pathName}", "${moduleName}:${pathName}:list,${moduleName}:${pathName}:info,${moduleName}:${pathName}:save,${moduleName}:${pathName}:update,${moduleName}:${pathName}:delete", "1", "fa " + ico(), order(), "", "${moduleName}_${pathName}_table_comment"};
        SysMenuEntity sysMenu = sysMenuService.from(_m);
        SysMenuEntity entity = sysMenuService.get(sysMenu);
        if (null == entity) {
            int ret = sysMenuService.put(sysMenu);
            if (1 == ret)
                id = sysMenu.getMenuId();
        } else
            id = entity.getMenuId();
        String[][] menus = new String[][]{
                {null, id + "", "查看", null, "${moduleName}:${pathName}:list,${moduleName}:${pathName}:info", "2", null, order(), "", "sys_string_lookup"},
                {null, id + "", "新增", null, "${moduleName}:${pathName}:save", "2", null, order(), "", "sys_string_add"},
                {null, id + "", "修改", null, "${moduleName}:${pathName}:update", "2", null, order(), "", "sys_string_change"},
                {null, id + "", "删除", null, "${moduleName}:${pathName}:delete", "2", null, order(), "", "sys_string_delete"},
        };
        for (String[] menu : menus) {
            sysMenu = sysMenuService.from(menu);
            entity = sysMenuService.get(sysMenu);
            if (null == entity) {
                sysMenuService.put(sysMenu);
            }
        }
        addLanguageColumnItem();
    }

    public void addLanguageColumnItem() {
        languageService.addLanguageColumnItem("${moduleName}_${pathName}_table_comment", "$comment");
    #foreach ($column in $columns)
        languageService.addLanguageColumnItem("${moduleName}_${pathName}_column_$column.name", "$column.comment");
    #end
    }
}
